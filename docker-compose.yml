version: '3'
services:
  db:
    image: mysql/mysql-server:5.7
    env_file: ${PWD-.}/config/db.env
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    volumes:
      - ${PWD-.}/mysql-db:/docker-entrypoint-initdb.d
    restart: unless-stopped
  redis:
    image: healthcheck/redis:latest
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    volumes:
      - ${PWD-.}/redis:/data
    restart: unless-stopped
  nwnxee-server:
    image: nwnxee/unified:latest
    env_file: ${PWD-.}/config/nwserver.env
    stdin_open: true
    tty: true
    links:
      - "db:db"
      - "redis:redis"
    depends_on:
      - db
      - redis
    volumes:
      - ${PWD-.}/logs:/nwn/run/logs.0
      - ${PWD-.}/server/:/nwn/home
    restart: always
    ports:
      - "5121:5121/udp"

  logspout:
    image: gliderlabs/logspout:v3
    command: 'syslog://logstash:5000'
    links:
      - logstash
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock'

  logstash:
    image: ludekvesely/logstash-json
    environment:
      - LOGSPOUT=ignore
      - DROP_NON_JSON=false
      - STDOUT=true
    links:
      - elasticsearch

  kibana:
    image: kibana
    environment:
      - LOGSPOUT=ignore
    links:
      - elasticsearch
    ports:
      - '5601:5601'

  elasticsearch:
    image: elasticsearch
    environment:
      - LOGSPOUT=ignore